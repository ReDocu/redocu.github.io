---
layout: main
title:  "언리얼 - VR 강의 [스카이]"
date:   2025-01-02 00:00:00 +0900
categories: 언리얼
index : 6
post_layout: true
---

## `VR 강의 목차`

### `VR 객체와 상호작용하기 위한 손동작 구현하기`

<div class="row">
    <div class="col-6 col-12-xsmall">
    <ol>
      <li><a href="#하늘-구성하기">하늘 구성하기</a></li>
      <li><a href="#구름-만들기">구름 만들기</a></li>
      <li><a href="#랜드-스케이프">랜드 스케이프</a></li>
      <li><a href="#눈오는-날씨">눈오는 날씨</a></li>
      <li><a href="#비오늘-날씨">비오는 날씨</a></li>
    </ol>
  </div>
</div>
<hr/>

### 하늘 구성하기

#### `1. 환경 구성하기`
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_01.png" alt="" /></span>
  - Cube로 환경 세팅 확인해보기
    - Transform [0/0/0] , Materials [초기화]
    - Lit 모드를 Unlit으로 변경하기 [큐브가 보임]
    - Cube [X - 15 / Y - 15] - 다시 Lit로 변경하여 상태 확인하기
    - Environment Light Mixer 열기 
    - 환경요소를 담당하는 5가지 요소 추가하기
      - Sky Light
      - Atmospheric Light
      - Sky Atmosphere
      - Volumetric Cloud
      - Height Fog
    - OutLiner로 넘어가기
      - Post-Process Volume 생성하기
      - Infinite Extend (Unbound) 체크하기
      - Exposure - Min EV100 / Max EV 100 조정하기 [최소 밝기와 최대 밝기] - 0.5 / 0.5

#### `2. BP Dinamic Sky 액터 만들기`
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_02.png" alt="" /></span>
  - 기능탐색
    - Directional Light : 태양 역할 [방향성 조작] 
    - Sky Light : 하늘에서 오는 빛 
    - Sky Atmosphere
    - Volumetric Cloud
    - Height Fog
    - Post-Process Volume
  - Blueprint Class 만들기 [BP_DynamicSky] 만들기 [ 위 6가지 요소 추가하기]
    - 오류는 여러개의 Light가 충돌하고 있다는 뜻
      - Directional Light : Forward Shading Priority 를 1로 변경
      - Sky Atmosphere
      - Sky Light : Real Time Capture 활성화
      - Exponential Height Fog
      - Post Process :  Max EV 100 조정하기 [최소 밝기와 최대 밝기] - 0.5 / 0.5
    - SunDirectionLight - Rotation y : -75 변경하기

#### `3. 시간대 확인하기`
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_03.png" alt="" /></span>
  - 0[일출] -90[정오] -180[일몰]
  - 변수 설정 
    - TimeOfDay : Float , 9.0 [시간] , Slider Range [0 ~ 24] , Value Range [0 ~ 24]
    - DawnTime(일출) : Float , 6.0 [시간] , Slider Range [5 ~ 8] , Value Range [5 ~ 8]
    - DuskTime(일몰) : Float , 18.0 [시간] , Slider Range [16 ~ 20] , Value Range [16 ~ 20]
  - 함수 만들기
    - HandleSunMoonRotation
    - SunDirectionLight - Set World Rotation : Handling sun rotation between dawn and dusk
    - Map Range Unclamped 
      - value : TimeOfDay 
      - InRangeA : DawnTime
      - InRangeB : DuskTime
      - Out Range A : 0.0
      - Out Range B : -180.0
    - Pitch 연결
  - Construction Script 에 Sequence 연결하기

#### `4. 달 회전 처리`

  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_04.png" alt="" /></span>
  - BP_DynamicSky 컴포넌트 추가하기
    - Intensity : 2.0 lux
    - MoonDirectionLight : 달 
      - MoonDirectionLight - Set World Rotation [Dusk] : Handling moon rotation after dusk
        - Map Range Unclamped 
          - value : TimeOfDay 
          - InRangeA : DuskTime + 0.3
          - InRangeB : 24
          - Out Range A : -180.0
          - Out Range B : -90
      - MoonDirectionLight - Set World Rotation [Dawn] : Handling moon rotation before dawn
        - Map Range Unclamped 
          - value : TimeOfDay 
          - InRangeA : 0
          - InRangeB : DawnTime - 0.3
          - Out Range A : -90
          - Out Range B : -0

#### `5. 매크로를 활용하여 밤과 해 구분하기`
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_05-1.png" alt="" /></span>
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_05-2.png" alt="" /></span>
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_05-3.png" alt="" /></span>
  - 매크로  : 반환 가능/다른 클래스에서 가능/Timeline, Delay 불가
  - 함수    : 반환 가능/다른 클래스에서 불가능/Timeline, Delay 불가
  - 이벤트  : 반환 불가/다른 클래스에서 가능Timeline, Delay 가능
  - IsDayTime : 매크로 만들기
  ```python
    return (Time of Day > Dawn Time - 0.3 && Time of Day < Dusk Time + 0.3>)
  ```
  - InNightTIme : 매크로 만들기
  ```python
    return !IsDayTime
  ```
  - HandleVisibility
    - SunDirectionLight - SetVisibility - IsDayTime : New Visibility
    - MoonDirectionalLight - SetVisibility - IsNightTIme : New Visibility
  - Construction Script - Handle Visibility

#### `6. 밤 하늘 구현하기`
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_06-1.png" alt="" /></span>
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_06-2.png" alt="" /></span>
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_06-3.png" alt="" /></span>
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_06-4.png" alt="" /></span>
  - DirectionalLight
    - Intensity : 2.0 lux [밝기 조정하기]
    - Light Color : 0.921875 
    - SourceAngle : 0 ~ 10 [빛의 크기 조정] 
    - Use Temperature : 6500 - 8000 [커질수록 차가운 느낌]
  - SkyAtmosphere
    - Rayleigh Scattering [대기의 섹조] [0.133954 / 0.212434 / 0.578125]
    - MultiScattering [빛의 산란 정도 / 밝기가 약간 감소] : 0.5 
    - Ground Albedo(지평선의 색조 제어) [0.29953 / 0.313553 / 0.822917]
  - Ctrl - L 을 통해 각도를 조정할 수 있음
  - BP_DynamicSky HandleNightSetting 함수 생성 내용 추가하기 [위 이미지 참조]
    - DirectionalLight : 함수에 내용 추가
    - SkyAtmosphere : 밤 모드 내용 추가
    - SkyAtmosphere : 밤 모드 초기화 내용 추가 
  - HandleNightSetting 함수 구성 및 생성자 추가하기 [위 이미지 참조]

#### `7. 하늘 구체 만들기` 
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_07-1.png" alt="" /></span>
  <span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_07-2.png" alt="" /></span>
  - Content Drawer에서 Setting 확인하기
    - Show Engine Content
    - Show Plugin Content
  - Engine 폴더에서 BP_Sky_Sphere 가져오기
    - Static Mesh - SM_SkySphere 복사해오기
    - BP_DynamicSky에 Static Mesh 추가해서 복사해놓은 SkySphere 붙여넣기 - Material 초기화
    - SM_SkySphere : 크기 1000000 조정하기
  - 폴더 경로 맞춰서, M_DynamicSkySphere 머터리얼 만들어주기
    - Shading Model : Unlit
    - Is Sky : True
    - SkyAtmosphereViewLuminance + SkyAtmosphere LightDiskLuminance - Emissive Color
    - 인스턴스 만들어서 SM_SkySpheredml Meterials에 넣어주기

#### `8. 하늘 구체 만들기`
<span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_08.png" alt="" /></span>
  - Materials 의 기본기능 : HLSL
    - float
    - float2
    - float3
    - RGB / XYZ 
    - Texture Coordinate [수평 U , 수직 V]
  
#### `9. 밤하늘의 별을 구현하기` 
<span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_09-1.png" alt="" /></span>
<span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_09-2.png" alt="" /></span>
<span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_09-3.png" alt="" /></span>
  - Texture Sample 
    - Group : Star 추가하기 
    - Parameter : StarTexture로 바꾸기
    - Sort Priority : 10
  - Vector Parameter : Stars Basic Settings
    - r : StarsTiling
    - g : StarsPanningSpeed
    - Group : Star
    - Sort Priority : 20
    - R : 1 / G : 1
  - Panner : Coordinate 
    - Coordinate : StarsTiling * TexCoord
    - Time (Time WithSpeed Variable) / StarsPanni ngSpeed
    - Speed (1.0 / 0.0)
  - Vector Parameter : StarsTint
    - R : 1 G : 1 B : 1 / A : 1 (Brightness)
  - StarTexture * StarsTint 
  - CachedStarsFinalOutput :Name Route

#### `10. Vertex Normal 세팅하기`
<span class="image fit"><img src="/images/curriculum/UE_sky/UE_Sky_10.png" alt="" /></span>
  - 머터리얼 노드에 대하여
    - R : External Data : Data Coming from outside
      - TexCoord
      - CameraPosition
      - Absolute World Position
      - Reflection Vector
      - Particle Color
      - Object Orientation
      - Object Position
      - VertexNormalWS
      - 기타 등등
    - G : Native HLSL [Multiply] : Built in source code
    - B : Material Function : Built in editor
  - VertexNormal - Mask(B) - Multiply(-1) - Power - SkyMaskContrast - Saturate(0 ~ 1로 값 세팅)

#### `11. 채널 마스크`
 
  - StarTilingBreakNoise
    - StarsTiling : R
    - StarPanningSpeed : G
    - StarsNoiseTiling : B
    - StarNoiseTilingSpeed : A
    - Sort Priority : 15
  - StarsBasicSettings
    - StarsNoiseTiling : B
    - StarsNoisePanningSpeed : A
    - Panner Connect
  - TilingBreakNoiseUsedChannel : ChannelMaskParameter
    - Sort Priority : 16
  

