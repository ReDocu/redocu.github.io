---
layout: main  
title:  "정보처리기사 - 1. 소프트웨어 설계 - 소프트웨어 개발 방법론 테일러링"
date:   2025-01-02 00:00:00 +0900
categories: 자격증
index : 2
post_layout: true
---

## 목차

<div class="row">
    <div class="col-6 col-12-xsmall">
    <ol>
      <li><a href="#소프트웨어-개발-방법론-테일러링">소프트웨어 개발 방법론 테일러링</a></li>
      <li><a href="#프로젝트-일정-관리">프로젝트 일정 관리</a></li>
      <li><a href="#프로젝트-비용산정-모델">프로젝트 비용산정 모델</a></li>
      <li><a href="#투입-인력-자원-구성">투입 인력 자원 구성</a></li>
      <li><a href="#소프트웨어-품질-관리">소프트웨어 품질 관리</a></li>
      <li><a href="#프로젝트-형상-관리">프로젝트 형상 관리</a></li>
    </ol>
  </div>
</div>

<hr/>


## `소프트웨어 개발 방법론 테일러링`

### 소프트웨어 개발 방법 테일러링
- 개발 방법론 테일러링의 개요
  - 방법론 테일러링 정의
    - 개발 프로젝트의 특성 및 필요에 따라 기존의 소프트웨어 개발 모델을 최적화하는 활동
    - 기존 개발 모델의 절차, 활동, 산출물 등의 가공, 적용, 정제를 반복적으로 수행
  - 방법론 테일러링의 필요성
    - 다양한 유형의 프로젝트를 하나의 정형화된 개발 모델만을 적용하기 어렵다.
    - 개발 모델을 선정하기 위한 내부적, 외부적 요건이 서로 충돌하는 경우가 많다.
  - 방법론 테일러링의 필요 판단 기준
    - 내부적 요건 : 목표 환경, 요구사항, 프로젝트 규모, 보유 기술
    - 외부적 요건 : 법적 제약사항, 표준 품질 기준

### 개발 방법론 테일러링 프로세스
- 프로젝트 일정 및 자원현황 반영
  - 개발 방법론에 프로젝트 일정과 비용, 목표 품질, 투입 자원, 위험관리 요소
- 기반이 되는 개발 모델에 맞춰 개발 단계별 절차 수립
  - 이해관계자들에게 반영된 결과를 설명하여 테일러링을 확정
- 테일러링 완료된 개발 모델에 대한 메뉴얼 작성
  - 확정된 개발 모델의 단계별 활동 목적과 작업 내용, 산출물에 대한 매뉴얼을 작성

### 소프트웨어 개발 프로젝트 개요
- 소프트웨어 개발 프로젝트 정의
  - 미리 계획된 일정과 차원의 범위 안에서 정해진 목표를 달성하기 위한 모든 활동
  - 프로젝트는 업무마다 개발 방법이나 시간이 정해져 있으며 단계적으로 진행
- 소프트웨어 개발 프로젝트 관리 요소
  - 소프트웨어 개발 프로젝트는 인적자원(People), 일정(Process), 문제인식(Problem)을 기반으로 관리
  - 일정 : 활동 순서, 활동 기간 산정, 일정 개발, 일정 통제
  - 비용 : 원가 산정, 예산 편성, 원가 통제
  - 투입 자원 : 팀 편성 및 관리, 자원 산정, 조직 정의, 자원 통제
  - 위험 : 위험 식별, 위험 평가, 위험 대처, 위험 통제
  - 품질 : 품질 계획, 품질 보증 수행, 품질 통제 수행
- 소프트웨어 개발 프로젝트 계획 및 예측
  - 개발 영역과 인력자원, 비용 및 일정등을 고려하여 프로젝트 계획을 수립
  - 프로젝트 진행 중 발생하는 위험요소에 대해서는 예측이 불가능
  - 프로젝트의 규모를 우선적으로 파악하고 프로젝트의 복잡도 등을 파악
  - 프로젝트 비용을 결정하는 요소
    - 프로젝트 요소 : 규모, 신뢰도, 복잡도 등
    - 자원 요소 : 인적 자원, 하드웨어, 소프트웨어 라이선스 등
    - 생산성 요소 : 개발 기간, 개발자의 능력 등

## `프로젝트 일정 관리`

### 프로젝트 일정 관리 원칙
- 관리 가능한 여러 개의 작업 분할
- 분할된 작업들의 의존성에 따라 상호관계 네트워크 설정
- 작업별로 요구되는 시간을 할당
- 개발자에게 적절한 시간을 할당
- 프로젝트 참여 인원은 규모에 따라 프로젝트 시작 전에 결정한다.
  - Brooks의 법칙 : 프로젝트 진행 중에 새로운 인원을 투입할 경우 오히려 일정을 지연시킴

### 프로젝트 일정 계획 방법론
- 프로젝트 일정 계획 방법론 정의
  - 프로젝트 일정을 계획대로 진행할 수 있도록 스케줄을 작성하는 방법론
  - 자원과 비용을 가장 적게 사용하면서, 가장 짦은 시간 내에 완성될 수 있도록 스케줄링
  - 소요 기간의 예측 가능성에 따라 PERT, CPM 등으로 나뉜다.
  - 일정 수립이 목적이며 정확한 프로젝트 진행 비용 산정은 별도로 진행
- PERT(Program Evaluation and Review Technique)
  - 작업별 개발 기간이 불확실하여 개발 기간 내에 전체 프로젝트를 완료할 수 있을지에 대한 확률을 분석할 때 사용하는 방법
  - 프로젝트를 구성하는 각 작업들을 낙관치, 기대치, 비관치로 구성하여 종료 시기를 예측
    - 예측치 = ((낙관치 + 4 X 기대치) + 비관치)/6
  - 노드와 간선을 통해 작업의 완료시점(이벤트)과 해당 작업의 소요시간을 예측하여 표혀ㅑㄴ
    - [1. 프로젝트 시작]      (1,2,3) 2주 (낙관치, 기대치, 비관치)
    - [2. 요구사항 분석 완료] (1,3,5) 3주 -- 
    - [3. HW 설계 완료]     (2,4,6) 4주
    - [4. HW 구현 완료]     (1,2,3) 2주 --
    - [5. SW 개발 완료]     (4,7,10) 7주
    - [6. 통합 구현 완료]    (1,4,7) 7주 --
    - [7. 프로젝트 종료]    (1,1,1) 1주
- CPM(Critical Path Method)
  - 작업별 개발 기간이 확실할 경우에 사용하는 방법으로 임계 경로 기법
  - 계획된 최단 시간으로 전체 프로젝트를 완료하기 위한 주공정 경로와 소요 기간을 계산
    - 원형 노드 : 특정 작업의 완료 시점
    - 박스 노드 : 해당 이정표에 종속된 모든 작업이 완료되어야 다음 작업 진행 가능
  - 임계 경로를 통해 개발 기간을 결정
    - 임계 경로(Critical Path = 주공정) : 작업 소요시간이 가장 오래 걸리는 경로
  - A [B(2주) C(5주) - 이정표(5주) - E(4주) - H(5주) - I]
  - A [D(4주) - 이정표(4주) - F(5주) G(7주) - 이정표(11주) - I]
- 간트 차트(Gantt Chart)
  - 프로젝트 개발 일정을 기능별로 시간의 흐름에 따라 막대 그래프를 사용하여 표현한 일정표
  - 작업 간의 의존성(선후관계) 및 작업의 문제 요인을 파악하기 어려움
  - 상세한 정보를 표현하기 어려워 소규모 활동으로 이루어지는 프로젝트에 적합
    - 일정
    - 작업 1   ====
    - 작업 2       ====
    - 작업 3  ==

## `프로젝트 비용산정 모델`

## `투입 인력 자원 구성`

## `소프트웨어 품질 관리`

## `프로젝트 형상 관리`


